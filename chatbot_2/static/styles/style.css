/* The :root selector matches the document's root element. In HTML, the root element is always the html element. */
:root {
  /* creates variables for the base set */
  --body-bg: #f5f7fa;
  --msger-bg: #fff;
  --border: 2px solid #ddd;
  --left-msg-bg: #ececec;
  --right-msg-bg: #579ffb;
}

html {
  /* The box-sizing property defines how the width and height of an element are calculated: should they include padding and borders, or not.
  The value border-box means the width and height properties (and min/max properties) includes content, padding and border. */
  box-sizing: border-box;
}

*,
/* The ::before selector inserts something before the content of each selected element(s). The ::after selector inserts something after the content. */
*:before,
*:after {
  margin: 0;
  padding: 0;
  /* The value inherit means it inherits this property from its parent element. */
  box-sizing: inherit;
}

body {
  /* The display property in CSS describes the behavior of an HTML element. In this case the body.
  flex allows you to alter items within a container by width, height, and order to best fill in the space. */
  display: flex;
  justify-content: center;
  align-items: center;
  /* Relative length units specify a length relative to another length property. Relative length units scale better between different rendering medium.
  vh means relative to 1% of the height of the viewport. The viewport is the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm. */
  height: 100vh;
  background-image: var(--body-bg);
  font-family: Helvetica, sans-serif;
}

.msger {
  display: flex;
  /* Makes the flexible items display in columns with wrapping */
  flex-flow: column wrap;
  /* The justify-content property aligns the flexible container's items when the items do not use all available space on the main-axis (horizontally).
  The value space-between means the items will have space between them. */
  justify-content: space-between;
  width: 100%;
  max-width: 867px;
  margin: 25px 10px;
  height: calc(100% - 50px);
  border: var(--border);
  border-radius: 5px;
  background: var(--msger-bg);
  box-shadow: 0 15px 15px -5px rgba(0, 0, 0, 0.2);
}

.msger-header {
  font-size: medium;
  justify-content: space-between;
  padding: 10px;
  text-align: center;
  border-bottom: var(--border);
  background: #eee;
  color: #666;
}

.msger-chat {
  /* flex: 1 means the following: 
  flex-grow : 1;    ➜ The div will grow in same proportion as the window-size       
  flex-shrink : 1;  ➜ The div will shrink in same proportion as the window-size 
  flex-basis : 0;   ➜ The div does not have a starting value as such and will take up screen as per the screen size available */ 
  flex: 1;
  /* The overflow-y property specifies whether to clip the content, add a scroll bar, or display overflow content of a block-level 
  element, when it overflows at the top and bottom edges. The value auto means a scrolling mechanism should be provided for overflowing boxes. */
  overflow-y: auto;
  padding: 10px;
}

.msg {
  display: flex;
  /* The align-items property is the same as justify content but the items are aligned vertically.
  flex-end means the items are aligned vertically at the bottom of the container. */
  align-items: flex-end;
  margin-bottom: 10px;
}

.msg-header-img{
  width: 120px;
  height: 100px;
  margin-left: 380px;
  background: #ddd;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  border-radius: 50%;
}

.msg-img {
  width: 50px;
  height: 50px;
  margin-right: 10px;
  background: #ddd;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  border-radius: 50%;
}

.msg-bubble {
  max-width: 450px;
  padding: 15px;
  border-radius: 15px;
  background: var(--left-msg-bg);
}
.msg-info {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}
.msg-info-name {
  margin-right: 10px;
  font-weight: bold;
}
.msg-info-time {
  font-size: 0.85em;
}

.left-msg .msg-bubble {
  border-bottom-left-radius: 0;
}

.right-msg {
  /* The flex-direction property specifies the direction of the flexible items.
  row-reverse	means the flexible items are displayed horizontally, as a row but in reverse order. */
  flex-direction: row-reverse;
}

.right-msg .msg-bubble {
  background: var(--right-msg-bg);
  color: #fff;
  border-bottom-right-radius: 0;
}
.right-msg .msg-img {
  margin: 0 0 0 10px;
}

.msger-inputarea {
  display: flex;
  padding: 10px;
  border-top: var(--border);
  background: #eee;
}
.msger-inputarea * {
  padding: 10px;
  border: none;
  border-radius: 3px;
  /* To allow users to resize the text (in the browser menu), many developers use em instead of pixels.
  1em is equal to the current font size. The default text size in browsers is 16px. So, the default size of 1em is 16px. */
  font-size: 1em;
}
.msger-input {
  flex: 1;
  background: #ddd;
}
.msger-send-btn {
  margin-left: 10px;
  background: rgb(0, 65, 196);
  color: #fff;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.23s;
}
.msger-send-btn:hover {
  background: rgb(0, 50, 180);
}

.msger-chat {
  background-color: #fcfcfe;
}